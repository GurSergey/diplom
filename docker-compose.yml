version: '3.1'
services:
  tomcat:
    depends_on:
      - db
      - ml_real_time
    image: tomcat:9.0-jdk8
    environment:
      - JPDA_ADDRESS=8000
      - JPDA_TRANSPORT=dt_socket
      - JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8
    entrypoint: /usr/local/tomcat/bin/catalina.sh jpda run
    ports:
      - 8880:8080
      - 8002:8000
    volumes:
      - ./apps:/usr/local/tomcat/webapps
      - ./datasets:/usr/local/datasets
      - ./models:/usr/local/models
      - ./text_admin_file:/text_admin_file
      - ./text_user_file:/text_user_file
  ml_learning:
    depends_on:
      - db
    build:
      context: ./build
      dockerfile: dockerfile-ml
    volumes:
    - ./ml_learning:/app
    - ./datasets:/datasets
    - ./models:/models
    working_dir: /app
    entrypoint: python -u main.py
#  dataset_check:
#    depends_on:
#      - db
#    build:
#      context: ./build
#      dockerfile: dockerfile-ml
#    volumes:
#    - ./dataset_check:/app
#    - ./datasets:/datasets
#    working_dir: /app
#    entrypoint: python -u main.py
#  merge_datasets:
#    depends_on:
#      - db
#    build:
#      context: ./build
#      dockerfile: dockerfile-ml
#    volumes:
#    - ./merge_datasets:/app
#    - ./datasets:/datasets
#    working_dir: /app
#    entrypoint: python -u main.py
#  ml_text_admin:
#    depends_on:
#      - db
#    build:
#      context: ./build
#      dockerfile: dockerfile-ml
#    volumes:
#    - ./ml_text_admin:/app
#    - ./text_admin_file:/text_admin_file
#    - ./models:/models
#    working_dir: /app
#    entrypoint: python -u main1.py
#  ml_text_user:
#    depends_on:
#      - db
#    build:
#      context: ./build
#      dockerfile: dockerfile-ml
#    volumes:
#    - ./ml_text_user:/app
#    - ./text_user_file:/text_user_file
#    - ./models:/models
#    working_dir: /app
#    entrypoint: python -u main1.py
  ml_real_time:
    build:
      context: ./build
      dockerfile: dockerfile-ml
    volumes:
    - ./ml_real_time:/app
    - ./models:/models
    working_dir: /app
    entrypoint: python -u main.py
  db:
    hostname: db
    image: postgres
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: diplom
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
